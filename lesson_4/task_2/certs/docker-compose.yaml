services:
 zookeeper:
   image: confluentinc/cp-zookeeper:7.4.4
   restart: always
   container_name: zookeeper
   hostname: zookeeper
   ports:
     - "2181:2181"
   networks:
     - confluent
   environment:
     ZOOKEEPER_SERVER_ID: 1
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
     ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
     ZOOKEEPER_SASL_ENABLED: "true"
     KAFKA_OPTS:
       -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
       -Dquorum.cnxn.threads.size=20
       -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
       -Dzookeeper.allowSaslFailedClients=false
       -DjaasLoginRenew=3600000
   volumes:
     - data-zookeeper-log-1:/var/lib/zookeeper/log
     - data-zookeeper-data-1:/var/lib/zookeeper/data
     - ./kafka-1-creds/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf



 kafka-1:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-1
   hostname: kafka-1
   depends_on:
     - zookeeper
   ports:
     - "9092:9092"
     - "9093:9093"
   networks:
     - confluent
   volumes:
     - data-kafka-1:/var/lib/kafka/data
     - ./kafka-1-creds:/etc/kafka/jaas
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SASL_PLAINTEXT://0.0.0.0:9093
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,SASL_PLAINTEXT://kafka-1:9093
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_OPTS: 
      -Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf

     KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_SSL_KEY_PASSWORD: password
     # Включаем авторизацию (ACL)
    #  KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    #  KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     # Кладём superuser'а, который сможет задавать ACL
     KAFKA_SUPER_USERS: User:admin


 kafka-2:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-2
   hostname: kafka-2
   depends_on:
     - zookeeper
   ports:
     - "9094:9094"
     - "9095:9095"
   networks:
     - confluent
   volumes:
     - data-kafka-2:/var/lib/kafka/data
     - ./kafka-2-creds:/etc/kafka/jaas
   environment:
     KAFKA_BROKER_ID: 2
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,SASL_PLAINTEXT://0.0.0.0:9095
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9094,SASL_PLAINTEXT://kafka-2:9095
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_SSL_KEY_PASSWORD: password
     # Включаем авторизацию (ACL)
    #  KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    #  KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     # Кладём superuser'а, который сможет задавать ACL
     KAFKA_SUPER_USERS: User:admin

 kafka-3:
   image: confluentinc/cp-kafka:7.4.4
   restart: always
   container_name: kafka-3
   hostname: kafka-3
   depends_on:
     - zookeeper
   ports:
     - "9096:9096"
     - "9097:9097"
   networks:
     - confluent
   volumes:
     - data-kafka-3:/var/lib/kafka/data
     - ./kafka-3-creds:/etc/kafka/jaas
   environment:
     KAFKA_BROKER_ID: 3
     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
     KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
     KAFKA_DELETE_TOPIC_ENABLE: true
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     
     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9096,SASL_PLAINTEXT://0.0.0.0:9097
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9096,SASL_PLAINTEXT://kafka-3:9097
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
     KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
     KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
     
     KAFKA_SSL_KEYSTORE_FILENAME: kafka-3.keystore.jks
     KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
     KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
     KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.truststore.jks
     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
     KAFKA_SSL_KEY_PASSWORD: password
     # Включаем авторизацию (ACL)
    #  KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
    #  KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
     # Кладём superuser'а, который сможет задавать ACL
     KAFKA_SUPER_USERS: User:admin


# на авторизации - не смог заставить работать( 
#  kafka-ui:
#     image: provectuslabs/kafka-ui:latest
#     container_name: kafka-ui
#     hostname: kafka-ui
#     ports:
#       - "8080:8080"
#     depends_on:
#       - kafka-1
#       - kafka-2
#       - kafka-3
#     networks:
#       - confluent
#     environment:
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9093,kafka-2:9095,kafka-3:9097
#       KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
#       KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka-ui.truststore.jks
#       KAFKA_CLUSTERS_0_PROPERTIES_SSL_TRUSTSTORE_PASSWORD: password
#       KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-ui.keystore.jks
#       KAFKA_CLUSTERS_0_PROPERTIES_SSL_KEYSTORE_PASSWORD: password
#       KAFKA_CLUSTERS_0_PROPERTIES_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      
#       KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
#       KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: |
#         org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";

#     volumes:
#       - ./kafka-ui-creds:/etc/kafka/secrets


volumes:
 data-zookeeper-log-1:
 data-zookeeper-data-1:
 data-kafka-1:
 data-kafka-2:
 data-kafka-3:


networks:
 confluent: